csv.data <- read.csv("./log.txt",header=TRUE,sep=";")
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.95, replace=FALSE),]
#dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), 80, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 20, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
csv.data <- read.csv("./log.txt",header=TRUE,sep=";")
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.8, replace=FALSE),]
#dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), 40, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
#sample = data.frame(diff=seq(1, 20, 0.25))
#newres = predict(mylogit, newdata = sample, type = "response")
#plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
x <- 1/(1+exp(-(5.7-0.7*0.5)))
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
#plot(mylogit)
csv.data <- read.csv("./log.txt",header=TRUE,sep=";")
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.95, replace=FALSE),]
#dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), 80, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 20, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
#curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
#plot(mylogit)
csv.data <- read.csv("./log.txt",header=TRUE,sep=";")
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.8, replace=FALSE),]
#dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), 80, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 20, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
#curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
#plot(mylogit)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.8, replace=FALSE),]
#dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), 80, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 20, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
#curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
#plot(mylogit)
source('~/.active-rstudio-document')
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data <- as.data.table(csv.data)
library(data.table)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data <- as.data.table(csv.data)
library(data.table)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data <- as.data.table(csv.data)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.8, replace=FALSE),]
motrice <-  csv.data[,c("diff","win")]
#dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), 80, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 20, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
#curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
#plot(mylogit)
View(csv.data)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.99, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 20, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
#curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
#plot(mylogit)
plot(data.frame(sample,newres))
View(csv.data)
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
plot(mylogit)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel"),]
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.99, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 20, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
#curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
plot(mylogit)
View(csv.data)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
View(csv.data)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.99, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 10, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
#curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
#summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
plot(mylogit)
plot(mylogit)
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
summary(mylogit)
confint(mylogit)
summary(mylogit)
sample = data.frame(diff=seq(1, 10, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
dataDiff <- csv.data[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.99, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
sample = data.frame(diff=seq(1, 10, 0.25))
newres = predict(mylogit, newdata = sample, type = "response")
plot(data.frame(sample,newres))
summary(mylogit)
#coef(mylogit)
#plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
#summary(csv.data)
summary(mylogit)
#confint(mylogit)
#wald.test(b = coef(mylogit), Sigma = vcov(mylogit), Terms = 4:6)
#plot(mylogit)
curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
plot(data.frame(sample,newres))
curve(predict(mylogit, data.frame(diff=x), type="resp"), add=TRUE, col="red")
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win")
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win", type="h")
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win", type="0")
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win", type="o")
hist(,dataDiffSampleplot="true")
hist(dataDiffSample,plot="true")
hist(x=dataDiffSample,plot="true")
hist(x=dataDiffSample$win,plot="true")
hist(x=dataDiffSample$diff,plot="true")
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y, main="PDF Scatterplot Example", col=rgb(0,100,0,50,maxColorValue=255), pch=16)
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win",  col=rgb(0,100,0,50,maxColorValue=255))
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win",  col=rgb(0,100,0,10,maxColorValue=255))
plot(dataDiff$diff, dataDiff$win, xlab="Diff",  ylab="win",  col=rgb(0,100,0,20,maxColorValue=255))
hist(x=dataDiffSample$diff,plot="true")
hist(x=dataDiffSample[which(dataDiffSample$win=="0")]$diff,plot="true")
hist(x=dataDiffSample[which(dataDiffSample$win==0)]$diff,plot="true")
dataDiffWin = dataDiffSample[which(dataDiffSample$win==0)]
dataDiffWin = dataDiffSample[which(dataDiffSample$win=="0")]
hist(x=dataDiffWin$diff,plot="true")
dataDiffWin <- dataDiffSample[which(dataDiffSample$win=="0")]
dataDiffWin <- dataDiffSample#[which(dataDiffSample$win=="0")]
hist(x=dataDiffWin$diff,plot="true")
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
hist(x=dataDiffWin$diff,plot="true")
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
hist(x=dataDiffWin$diff,plot="true")
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
hist(x=dataDiffFail$diff,plot="true")
hist(x=dataDiffWin$diff,plot="true")
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
hist(x=dataDiffWin$diff,plot="true")
hist(x=dataDiffFail$diff,plot="true")
hist(x=dataDiffWin$diff,plot="true")
hist(x=dataDiffFail$diff,plot="true")
hist(x=dataDiffWin$diff,plot="true")
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
hist(x=dataDiffWin$diff,plot="true")
hist(x=dataDiffFail$diff,plot="true")
hist(x=dataDiffWin$diff,plot="true")
hist(x=dataDiffFail$diff,plot="true")
install.packages("plotrix")
require(plotrix)
l <- list(rnorm(50),rnorm(50,sd=2),rnorm(50,mean=3))
multhist(l)
l <- list(dataDiffWin,dataDiffFail)
multhist(l)
l <- list(rnorm(50),rnorm(50,sd=2),rnorm(50,mean=3))
multhist(l)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffWin,dataDiffFail)
multhist(l)
l <- list(dataDiffWin$diff,dataDiffFail$diff)
multhist(l)
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel"),]
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
require(plotrix)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
require(plotrix)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data = csv.data[which(csv.data$nom_du_jeu=="Moteur"),]
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
require(plotrix)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data <- read.csv("./laurene.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
require(plotrix)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data <- read.csv("./laurene.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Motrice"),]
dataDiff <- csv.data[,c("diff","win")]
require(plotrix)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel"),]
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
View(csv.data)
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel" & csv.data$diff<0.1),]
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel" & csv.data$diff<0.1),]
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel" & csv.data$diff<0.075),]
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel" & csv.data$diff<0.0075),]
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel"),]
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Sensoriel"),]
require(plotrix)
dataDiffWin <- csv.data[which(csv.data$win=="1"),]
dataDiffFail <- csv.data[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
View(csv.data)
install.packages("data.table")
require(data.table)
DT <- as.data.table(csv.data)
setkey(DT, IDjoueur, nom_du_jeu, sequence)
logique <- DT[nom_du_jeu=="Logique"]
logique <- logique[, tail(.SD, 1), by = key(DT)]
DT <- DT[nom_du_jeu!="Logique"]
DT <- rbind(logique, DT)
DT
csv.data = csv.data[which(csv.data$nom_du_jeu=="Logique"),]
DT <- as.data.table(csv.data)
setkey(DT, IDjoueur, nom_du_jeu, sequence)
logique <- DT[nom_du_jeu=="Logique"]
logique <- logique[, tail(.SD, 1), by = key(DT)]
DT <- DT[nom_du_jeu!="Logique"]
DT <- rbind(logique, DT)
DT
csv.data = csv.data[which(csv.data$nom_du_jeu=="Logique"),]
DT <- as.data.table(csv.data)
setkey(DT, IDjoueur, nom_du_jeu, sequence)
logique <- DT[nom_du_jeu=="Logique"]
logique <- logique[, tail(.SD, 1), by = key(DT)]
DT
logique
csv.data = csv.data[which(csv.data$nom_du_jeu=="Logique"),]
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Logique"),]
DT <- as.data.table(csv.data)
setkey(DT, IDjoueur, nom_du_jeu, sequence)
logique <- DT[nom_du_jeu=="Logique"]
logique <- logique[, tail(.SD, 1), by = key(DT)]
logique
dataDiff <- logique[,c("diff","win")]
dataDiffSample <- dataDiff[sample(1:nrow(dataDiff), nrow(dataDiff)*0.99, replace=FALSE),]
mylogit <- glm(win ~ diff, data = dataDiffSample, family = "binomial"(link = "logit"))
require(plotrix)
csv.data <- read.csv("./log_thomas.txt",header=TRUE,sep=";")
csv.data = csv.data[which(csv.data$nom_du_jeu=="Logique"),]
DT <- as.data.table(csv.data)
setkey(DT, IDjoueur, nom_du_jeu, sequence)
logique <- DT[nom_du_jeu=="Logique"]
logique <- logique[, tail(.SD, 1), by = key(DT)]
dataDiffWin <- logique[which(csv.data$win=="1"),]
dataDiffFail <- logique[which(csv.data$win=="0"),]
l <- list(dataDiffFail$diff,dataDiffWin$diff)
multhist(l)
