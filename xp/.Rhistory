print(p)
}
plot.subjective.difficulty(DTS)
plot.subjective.difficulty(DTL)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
data = DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
nb.vals[i] = length(data)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(data,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
#test.res = wilcox.test(data,mu = 1-obj.diff.bin.cur,conf.int=T)
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
print(test.res)
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 1, slope = -1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
data = DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
nb.vals[i] = length(data)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(data,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 1, slope = -1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
plot.subjective.difficulty(DTS)
plot.subjective.difficulty(DTL)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
data = DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
nb.vals[i] = length(data)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(data,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 1, slope = -1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
plot.subjective.difficulty(DTS)
plot.subjective.difficulty(DTL)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
subj.diff = 1 - DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(data)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(subj.diff,mu = obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = subj.diff.med[i] - (1-obj.diff.bin.cur)
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 1, slope = -1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
mise.norm = DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(data)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(mise.norm,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = subj.diff.med[i] - (1-obj.diff.bin.cur)
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 1, slope = -1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
subj.diff = 1 - DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(subj.diff)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(subj.diff,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = subj.diff.med[i] - (1-obj.diff.bin.cur)
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 1, slope = -1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
subj.diff = 1 - DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(subj.diff)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(subj.diff,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = subj.diff.med[i] - (1-obj.diff.bin.cur)
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 0, slope = 1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
plot.subjective.difficulty(DTS)
plot.subjective.difficulty(DTL)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
subj.diff = 1 - DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(subj.diff)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(subj.diff,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = subj.diff.med[i] - obj.diff.bin.cur
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 0, slope = 1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
plot.subjective.difficulty(DTS)
plot.subjective.difficulty(DTL)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
subj.diff = 1 - DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(subj.diff)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(subj.diff,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = subj.diff.med[i] - obj.diff.bin.cur
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,delta.obj.subj=delta.obj.subj,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 0, slope = 1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
plot.subjective.difficulty(DTS)
plot.subjective.difficulty(DTL)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
subj.diff = 1 - DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(subj.diff)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(subj.diff,mu = 1-obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = signif(subj.diff.med[i] - obj.diff.bin.cur,digit=2)
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,delta.obj.subj=delta.obj.subj,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 0, slope = 1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
#------------------------------------------------------
#         SHOWING SUBJECTIVE DIFFICULTY
#------------------------------------------------------
plot.subjective.difficulty <- function(DT){
# Lien entre mise normalisée et difficultée estimée (hard / easy effect)
subj.diff.med = numeric(10)
obj.diff.bin = numeric(10)
obj.diff.bin.cur = 0;
test.pvals = numeric(10)
conf.min = numeric(10)
conf.max = numeric(10)
nb.vals = numeric(10)
delta.obj.subj = numeric(10)
for(i in 1:10){
obj.diff.bin.cur = round(i/10,1)
subj.diff = 1 - DT[round(obj.diff,1)==obj.diff.bin.cur]$miseNorm;
obj.diff.bin[i] = obj.diff.bin.cur
subj.diff.med[i] = NA
test.pvals[i] = NA
conf.min[i] = NA
conf.max[i] = NA
delta.obj.subj[i] = NA
nb.vals[i] = length(subj.diff)
if(nb.vals[i] > 1){
try.res = try(test.res <- wilcox.test(subj.diff,mu = obj.diff.bin.cur,conf.int=T))
if (class(try.res) != "try-error"){
test.pvals[i] = format.pval.stars(test.res$p.value)
subj.diff.med[i] = test.res$estimate
conf.min[i] = test.res$conf.int[1]
conf.max[i] = test.res$conf.int[2]
delta.obj.subj[i] = signif(subj.diff.med[i] - obj.diff.bin.cur,digit=2)
}
}
}
#print table of pvalues
print(data.table(obj.diff.bin=obj.diff.bin,delta.obj.subj=delta.obj.subj,n=nb.vals,pval=test.pvals))
DTPlot = data.table(obj.diff=obj.diff.bin,subj.diff=subj.diff.med)
p = ggplot(DTPlot, aes(obj.diff,subj.diff)) +
geom_point(alpha = 0.4, size = 3.5) +
xlim(0,1)+
ylim(0,1)+
geom_errorbar(aes(ymin=conf.min, ymax=conf.max), width=.01,color="red")  +
geom_abline(intercept = 0, slope = 1, color="blue")
print(p)
}
plot.subjective.difficulty(DTM)
plot.subjective.difficulty(DTM)
plot.subjective.difficulty(DTS)
plot.subjective.difficulty(DTL)
