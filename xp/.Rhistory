main="Profil de joueur des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueur$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueur),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
dataQ$maxProfilJoueur = pmax(dataQ$profilJoueur2,
dataQ$profilJoueur3,
dataQ$profilJoueur4,
dataQ$profilJoueur5,
dataQ$profilJoueur6,
dataQ$profilJoueur7)
dataQ$maxProfilJoueur = pmax(dataQ$profilJoueur2,
dataQ$profilJoueur3,
dataQ$profilJoueur4,
dataQ$profilJoueur5,
dataQ$profilJoueur6)
bpProfilJoueur <- hist(dataQ$maxProfilJoueur,
breaks=0:5,
main="Profil de joueur des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueur$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueur),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(dataQ$maxProfilJoueur,
breaks=0:5,
main="Profil de joueur des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueur$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueur),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
dataQ$maxProfilJoueurJeuVideo = pmax(dataQ$profilJoueur2,
dataQ$profilJoueur3,
dataQ$profilJoueur4,
dataQ$profilJoueur5,
dataQ$profilJoueur6)
dataQ$maxProfilJoueurJeuPlateau = pmax(dataQ$profilJoueur1)
dataQ$maxProfilJoueurJeuArgent = pmax(dataQ$profilJoueur7)
dataQ$maxProfilJoueurJeuVideo = pmax(dataQ$profilJoueur2,
dataQ$profilJoueur3,
dataQ$profilJoueur4,
dataQ$profilJoueur5,
dataQ$profilJoueur6)
dataQ$maxProfilJoueurJeuPlateau = pmax(dataQ$profilJoueur1)
dataQ$maxProfilJoueurJeuArgent = pmax(dataQ$profilJoueur7)
bpProfilJoueurJeuVideo <- hist(dataQ$maxProfilJoueurJeuVideo,
breaks=0:5,
main="Profil de joueur de jeux vidéo des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuVideo$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuVideo),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueurJeuPlateau <- hist(dataQ$maxProfilJoueurJeuPlateau,
breaks=0:5,
main="Profil de joueur de jeux de société des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuPlateau$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuPlateau),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueurJeuArgent <- hist(dataQ$maxProfilJoueurJeuArgent,
breaks=0:5,
main="Profil de joueur de jeux d'argent des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuArgent$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuArgent),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueurJeuArgent <- hist(dataQ$maxProfilJoueurJeuArgent,
breaks=0:5,
main="Profil de joueur de jeux d'argent des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 65),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuArgent$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuArgent),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueurJeuArgent <- hist(dataQ$maxProfilJoueurJeuArgent,
breaks=0:5,
main="Profil de joueur de jeux d'argent des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 80),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuArgent$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuArgent),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueurJeuVideo <- hist(dataQ$maxProfilJoueurJeuVideo,
breaks=0:5,
main="Profil de joueur de jeux vidéo des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuVideo$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuVideo),col = "blue", lwd = 2)
text(bpProfilJoueurJeuVideo, 0, round(countsJoueurJeuVideo, 1),cex=1,pos=3)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
countsJoueurJeuVideo <- table(dataQ$maxProfilJoueurJeuVideo)
bpProfilJoueurJeuVideo <- hist(dataQ$maxProfilJoueurJeuVideo,
breaks=0:5,
main="Profil de joueur de jeux vidéo des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuVideo$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuVideo),col = "blue", lwd = 2)
text(bpProfilJoueurJeuVideo, 0, round(countsJoueurJeuVideo, 1),cex=1,pos=3)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
help("text")
bpProfilJoueurJeuVideo <- hist(dataQ$maxProfilJoueurJeuVideo,
breaks=0:5,
main="Profil de joueur de jeux vidéo des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
text(bpProfilJoueurJeuVideo, 0, round(countsJoueurJeuVideo, 1),cex=1,pos=3)
dataQ$maxProfilJoueurJeuVideo = pmax(dataQ$profilJoueur2,
dataQ$profilJoueur3,
dataQ$profilJoueur4,
dataQ$profilJoueur5,
dataQ$profilJoueur6)
dataQ$maxProfilJoueurJeuPlateau = pmax(dataQ$profilJoueur1)
dataQ$maxProfilJoueurJeuArgent = pmax(dataQ$profilJoueur7)
histProfilJoueurJeuVideo <- hist(dataQ$maxProfilJoueurJeuVideo,
breaks=0:5,
main="Profil de joueur de jeux vidéo des participants",
xlab="Type de profil de joueur",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuVideo$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuVideo),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
histProfilJoueurJeuPlateau <- hist(dataQ$maxProfilJoueurJeuPlateau,
breaks=0:5,
main="Profil de joueur de jeux de société des participants",
xlab="Type de profil de joueur",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 55),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuPlateau$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuPlateau),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
histProfilJoueurJeuArgent <- hist(dataQ$maxProfilJoueurJeuArgent,
breaks=0:5,
main="Profil de joueur de jeux d'argent des participants",
xlab="Type de profil de joueur",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 80),
xaxt="n")
axis(side=1,at=bpProfilJoueurJeuArgent$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuArgent),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
histProfilJoueurJeuArgent <- hist(dataQ$maxProfilJoueurJeuArgent,
breaks=0:5,
main="Profil de joueur de jeux d'argent des participants",
xlab="Type de profil de joueur",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 80),
xaxt="n")
axis(side=1,at=histProfilJoueurJeuArgent$mids,labels=seq(1,5))
abline(v=mean(dataQ$maxProfilJoueurJeuArgent),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
dataProfilAE <- data.frame(dataQ)[,c("autoEffJoueur1","autoEffJoueur2","autoEffJoueur3","autoEffJoueur4","autoEffJoueur5","autoEffJoueur6","autoEffJoueur7","autoEffJoueur8","autoEffJoueur9","autoEffJoueur10")]
dataQ$meanProfilAE <- rowMeans(dataProfilAE, na.rm=TRUE)
meanProfilAE <- dataQ
meanProfilAE <- na.omit(meanProfilAE)
meanProfilAE <- as.data.frame(meanProfilAE)
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
axis(side=1,at=histProfilAE$mids,labels=seq(1,5))
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20),
xaxt="n")
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
axis(side=1,at=histProfilAE$mids,labels=seq(1,5))
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20),
xaxt="n")
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20))
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20),
xaxt="n")
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
axis(side=1,at=histProfilAE$mids,labels=seq(1,5))
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20),
xaxt="n")
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
axis(side=1,at=histProfilAE$mids,labels=seq(3,5))
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20),
xaxt="n")
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition selon les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
histProfilAE <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition selon les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 15))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
dataProfilRA <- data.frame(dataQ)[,c("loterie1","loterie2","loterie3","loterie4","loterie5","loterie6","loterie7","loterie8","loterie9","loterie10")]
dataQ$sumProfilRA <- rowSums(dataProfilRA, na.rm=TRUE)
histProfilRA <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25))
axis(side=1,at=histProfilRA$mids,labels=seq(1,5))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
histProfilRA <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(1,5))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
histProfilRA <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25),
xaxt="n")
#axis(side=1,at=histProfilRA$mids,labels=seq(1,5))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
histProfilRA <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(1,10))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(2,10))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25),
xaxt="n")
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25),
xaxt="n")
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25))
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(2, 10),
ylim = c(0, 25))
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(2, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(2,10))
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(2, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(2,9))
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(2, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(2,9))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(2, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(2,9))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed"
)
histProfilRA <- hist(dataQ$sumProfilRA,
breaks=2:10,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(2, 10),
ylim = c(0, 25),
xaxt="n")
axis(side=1,at=histProfilRA$mids,labels=seq(2,9))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed
")
DTQLoc <- data.table(dataQ)
DTGLoc <- as.data.table(dataG)
setkey(DTGLoc,IDjoueur)
setkey(DTQLoc,IDjoueur)
DTLoc <- DTGLoc[DTQLoc]
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuVideo + (1 | DTLoc$IDjoueur))
DTLoc$perdant <- 1-DTLoc$gagnant;
DTLoc$miseNorm <- DTLoc$mise / 7;
DTLoc$evalDiff <- 1 - DTLoc$miseNorm;
DTLoc[,miseBin := 0][mise >= 4, miseBin := 1]
DTLoc$newErr <- DTLoc$miseNorm - DTLoc$gagnant;
DTLoc$erreurMise = DTLoc$miseNorm - DTLoc$gagnant;
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuVideo + (1 | DTLoc$IDjoueur))
summary(model) #nope
r.squaredGLMM(model)
model <- aov(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuVideo)
summary(model) #nope
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuPlateau + (1 | DTLoc$IDjoueur))
summary(model) #nope
r.squaredGLMM(model)
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuArgent + (1 | DTLoc$IDjoueur))
summary(model) #nope
r.squaredGLMM(model)
DTLocGamer <- DTLoc[maxProfilJoueurJeuVideo>=3]
model <- lmer(DTLocGamer$erreurMise ~ DTLocGamer$difficulty + (1 | DTLocGamer$IDjoueur))
summary(model)
r.squaredGLMM(model)
DTLocNoGamer <- DTLoc[maxProfilJoueurJeuVideo<3]
model <- lmer(DTLocNoGamer$erreurMise ~ DTLocNoGamer$difficulty + (1 | DTLocNoGamer$IDjoueur))
summary(model) #*, c'est déjà ça
r.squaredGLMM(model)
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuVideo + (1 | DTLoc$IDjoueur))
summary(model) #nope
r.squaredGLMM(model)
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuPlateau + (1 | DTLoc$IDjoueur))
model <- aov(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuPlateau)
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuPlateau + (1 | DTLoc$IDjoueur))
summary(model) #nope
r.squaredGLMM(model)
model <- lmer(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuArgent + (1 | DTLoc$IDjoueur))
summary(model) #nope
r.squaredGLMM(model)
model <- aov(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuPlateau)
summary(model) #nope
model <- aov(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuArgent)
summary(model) #nope
model <- aov(DTLoc$erreurMise ~ DTLoc$maxProfilJoueurJeuVideo)
summary(model) #nope
DTLocNoGamer <- DTLoc[maxProfilJoueurJeuVideo<3]
model <- lmer(DTLocNoGamer$erreurMise ~ DTLocNoGamer$difficulty + (1 | DTLocNoGamer$IDjoueur))
summary(model) #*, c'est déjà ça
r.squaredGLMM(model)
DTLocEvalDiffLogique <- DTLoc[c(nom_du_jeu == "Logique2",evalDiff)]
help(boxplot)
mylogit <- glm(perdant ~ difficulty, data = DTLoc, family = "binomial"(link = "logit"))
sample = data.frame(difficulty=DTLoc$difficulty);
DTLoc$estDiff =  predict(mylogit, newdata = sample, type = "response");
max(DTLoc$estDiff)
min(DTLoc$estDiff)
maxEstDiff <- max(DTLoc$estDiff)
minEstDiff <- min(DTLoc$estDiff)
diff=i/10;
print(diff)
DTLoc = DTParam[which(difficulty >= diff-0.01 & difficulty <= diff+0.01 & action_de_jeu > 2)]
analyseHardEasyEffect <- function(DTParam){
res <- numeric(11)
coef <- numeric(11)
nb <- numeric(11)
nb2 <- numeric(11)
pv1 <- numeric(11)
pv2 <- numeric(11)
dObj <- numeric(11)
i = 0;
while(i<=10){
diff=i/10;
print(diff)
DTLoc = DTParam[which(difficulty >= diff-0.01 & difficulty <= diff+0.01 & action_de_jeu > 2)]
lengthEstDiff = maxEstDiff - minEstDiff
lengthEstDiff
lengthEstDiff = maxEstDiff - minEstDiff
lengthEstDiff <- maxEstDiff - minEstDiff
lengthEstDiff
maxEstDiff <- max(DTLoc$estDiff)
minEstDiff <- min(DTLoc$estDiff)
lengthEstDiff <- maxEstDiff - minEstDiff
maxEstDiff - minEstDiff
lengthEstDiff <- maxEstDiff - minEstDiff
lengthEstDiff
