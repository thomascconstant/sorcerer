ylab="Sentiment d'auto-efficacité (maximum = 5)",
ylim = c(0, 5))
abline(h=mean(meanProfilAE),col = "blue", lwd = 2)
View(meanProfilAE)
dataProfilAE <- data.frame(dataQ)[,c("autoEffJoueur1","autoEffJoueur2","autoEffJoueur3","autoEffJoueur4","autoEffJoueur5","autoEffJoueur6","autoEffJoueur7","autoEffJoueur8","autoEffJoueur9","autoEffJoueur10")]
dataQ$sumProfilAE <- rowSums(dataProfilAE, na.rm=TRUE)
dataQ$meanProfilAE <- rowMeans(dataProfilAE, na.rm=TRUE)
dataQ$meanProfilAE <- na.omit(dataQ$meanProfilAE)
dataProfilAE <- data.frame(dataQ)[,c("autoEffJoueur1","autoEffJoueur2","autoEffJoueur3","autoEffJoueur4","autoEffJoueur5","autoEffJoueur6","autoEffJoueur7","autoEffJoueur8","autoEffJoueur9","autoEffJoueur10")]
dataQ$sumProfilAE <- rowSums(dataProfilAE, na.rm=TRUE)
dataQ$meanProfilAE <- rowMeans(dataProfilAE, na.rm=TRUE)
meanProfilAE <- dataQ
meanProfilAE <- na.omit(meanProfilAE)
meanProfilAE <- as.data.frame(meanProfilAE)
bpProfilAE <- barplot(meanProfilAE, main="Sentiment d'auto-efficacité des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants se définissant comme joueur",
ylab="Sentiment d'auto-efficacité (maximum = 5)",
ylim = c(0, 5))
abline(h=mean(meanProfilAE),col = "blue", lwd = 2)
meanProfilAE
View(meanProfilAE)
bpProfilAE <- barplot(meanProfilAE, main="Sentiment d'auto-efficacité des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants se définissant comme joueur",
ylab="Sentiment d'auto-efficacité (maximum = 5)",
ylim = c(0, 5))
bpProfilAE <- barplot(meanProfilAE$meanProfilAE, main="Sentiment d'auto-efficacité des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants se définissant comme joueur",
ylab="Sentiment d'auto-efficacité (maximum = 5)",
ylim = c(0, 5))
abline(h=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
bpProfilJoueur <- barplot(dataQ$meanProfilJoueur, main="Profil de joueurs des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Temps de jeu (jamais = 0 / tous les jours = 5)",
ylim = c(0, 5))
abline(h=mean(dataQ$meanProfilJoueur),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
dataProfilRA <- data.frame(dataQ)[,c("loterie1","loterie2","loterie3","loterie4","loterie5","loterie6","loterie7","loterie8","loterie9","loterie10")]
dataQ$sumProfilRA <- rowSums(dataProfilRA, na.rm=TRUE)
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 5))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 10))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 11))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("topright", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral
5 : slightly risk averse / 6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : max choix sûr")
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 11))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("topright", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : max choix sûr")
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 12))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("topright", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : max choix sûr")
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 12))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : max choix sûr")
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 11))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : max choix sûr")
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 11.5))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : max choix sûr")
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 11.7))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : max choix sûr")
bpProfilRisque <- barplot(dataQ$sumProfilRA, main="Aversion au risque des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Somme des choix sûrs (maximum = 10)",
ylim = c(0, 11.7))
abline(h=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
summary(model)
r.squaredGLMM(model)
r.squaredGLMM
require(MuMIn)
library("xlsx")
require(xlsx)
require(plyr)
require(likert)
require(data.table)
require(ggplot2)
library(car)
require(lmerTest)
require(Matrix)
library(usdm)
require(lattice)
require(psychometric)
require(MuMIn)
require(pyramid)
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
summary(model)
r.squaredGLMM(model)
predict(model)
predict(model)
model <- lmer(DTLoc$erreurMise ~ DTLoc$action_de_jeu + (1 | DTLoc$IDjoueur))
summary(model) #nope
model <- lmer(DTLoc$erreurMise ~ DTLoc$action_de_jeu + (1 | DTLoc$IDjoueur))
summary(model) #nope
print(summary(model))
s<-summary(model) #nope
s
plot(DTLoc$erreurMise ~ DTLoc$action_de_jeu)
plot(DTLoc$erreurMise ~ DTLoc$action_de_jeu)
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
summary(model)
r.squaredGLMM(model)
model <- lmer(DTLoc$erreurMise ~ DTLoc$action_de_jeu + (1 | DTLoc$IDjoueur))
plot(DTLoc$erreurMise ~ DTLoc$action_de_jeu)
plot(DTLoc$erreurMise ~ DTLoc$action_de_jeu)
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
ggplot(data=DTLoc, aes(factor(erreurMise),difficulty)) + geom_boxplot()
ggplot(data=DTLoc, aes(factor(erreurMise),difficulty)) + geom_boxplot()
ggplot(data=DTLoc, aes(factor(erreurMise),difficulty)) + geom_line()
ggplot(data=DTLoc, aes(factor(erreurMise),difficulty)) + geom_line()
help(gtgplot)
help(ggplot)
ggplot(model)
ggplot(model)
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
ggplot(model)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty)
help(plot)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty, type = h)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty, type = "h")
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty, type = "h")
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty, type = "S")
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty, type = "S")
ggplot(data=DTLoc, aes(erreurMise,difficulty)) + geom_line()
ggplot(data=DTLoc, aes(erreurMise,difficulty)) + geom_line()
ggplot(data=DTLoc, aes(erreurMise,difficulty))
ggplot(data=DTLoc, aes(erreurMise,difficulty))
ggplot(data=DTLoc, aes(erreurMise,difficulty)) + geom_point()
ggplot(data=DTLoc, aes(erreurMise,difficulty)) + geom_point()
plot(DTLoc$erreurMise ~ DTLoc$difficulty, data = lin)
plot(DTLoc$erreurMise ~ DTLoc$difficulty)
plot(DTLoc$erreurMise ~ DTLoc$difficulty)
abline(linm)
fit <- glm(erreurMise ~ difficulty, data = DTLoc, family = "binomial"(link = "logit"))
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty)
abline(h=mean(model),col = "blue", lwd = 2)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty)
abline(h=mean(DTLoc$erreurMise),col = "blue", lwd = 2)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty)
abline(h=mean(DTLoc$erreurMise),col = "blue", lwd = 2)
abline(h=mean(DTLoc$erreurMise),col = "blue", lwd = 2)
plot(x=DTLoc$erreurMise, y=DTLoc$difficulty)
abline(h=mean(DTLoc$erreurMise),col = "blue", lwd = 2)
plot(x=DTLoc$mise, y=DTLoc$difficulty)
plot(x=DTLoc$mise, y=DTLoc$difficulty)
plot(x=DTLoc$mise, y=DTLoc$difficulty)
abline(h=mean(DTLoc$mise),col = "blue", lwd = 2)
install.packages("sjPlot ")
install.packages("sjPlot")
require(sjPlot)
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
sjp.lmer(model)
install.packages("arm")
require(arm)
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
sjp.lmer(model)
sjp.lmer(model)
sjp.lmer(model, sort = "DTLoc$difficulty")
sjp.lmer(model, sort = "difficulty")
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
sjp.lmer(model, sort = "DTLoc$difficulty")
sjp.lmer(model, sort = "DTLoc$erreurMise")
sjp.lmer(model, sort = "DTLoc$IDjoueur")
sjp.lmer(model, facet.grid = FALSE,)
sjp.lmer(model, facet.grid = FALSE,)
sjp.lmer(model)
sjp.setTheme(theme = "forest")
sjp.lmer(model, facet.grid = FALSE,)
sjp.lmer(model, facet.grid = FALSE,)
sjp.lmer(model, facet.grid = FALSE)
sjp.lmer(model)
sjp.lmer(model)
sjp.lmer(model, y.offset = .4)
sjp.lmer(model, y.offset = .4)
sjp.lmer(model, sort.est = "sort.all")
help(hist)
bpProfilJoueur <- hist(dataQ$meanProfilJoueur, main="Profil de joueurs des participants", horiz=FALSE,
names.arg=c("IDjoueur"),
legend.text = NULL, beside = TRUE,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Temps de jeu (jamais = 0 / tous les jours = 5)",
ylim = c(0, 5))
bpProfilJoueur <- hist(dataQ$meanProfilJoueur, breaks = "Sturges",
freq = NULL, probability = !freq,
include.lowest = TRUE, right = TRUE,
density = NULL, angle = 45, col = NULL, border = NULL,
axes = TRUE, axisnames = TRUE,
xlab="Participants",
ylab="Temps de jeu (jamais = 0 / tous les jours = 5)",
ylim = c(0, 5))
bpProfilJoueur <- hist(dataQ$meanProfilJoueur, breaks = "Sturges",
freq = NULL, probability = !freq,
include.lowest = TRUE, right = TRUE,
density = NULL, angle = 45, col = NULL, border = NULL)
bpProfilJoueur <- hist(dataQ$meanProfilJoueur)
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
ylim = c(0, 5))
model <- lmer(DTLoc$erreurMise ~ DTLoc$difficulty + (1 | DTLoc$IDjoueur))
sjp.lmer(model, sort.est = "sort.all")
sjp.lmer(model, sort.est = "sort.all")
sjp.lmer(model)
help("ggplot")
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
ylim = c(0, 5))
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
xlim = c(0, 5))
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
xlim = c(0, 5),
ylim = c(0, 35))
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
xlim = c(0, 5),
ylim = c(0, 25))
abline(h=mean(dataQ$meanProfilJoueur),col = "blue", lwd = 2)
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
xlab="Temps de jeu (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 25))
abline(h=mean(dataQ$meanProfilJoueur),col = "blue", lwd = 2)
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
main="Histogram for Air Passengers",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 25))
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
main="Profil de joueurs des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 25))
abline(h=mean(dataQ$meanProfilJoueur),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
main="Profil de joueurs des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 25))
abline(v=mean(dataQ$meanProfilJoueur),col = "blue", lwd = 2)
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
main="Profil de joueur des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(0, 5),
ylim = c(0, 25))
abline(v=mean(dataQ$meanProfilJoueur),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(dataQ$meanProfilJoueur,
main="Profil de joueur des participants",
xlab="Temps de jeu moyen (jamais = 0 / tous les jours = 5)",
ylab="Participants",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(dataQ$meanProfilJoueur),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
col=grey.colors(0.3),
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
col=grey.colors(0.9),
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
col=grey.colors(0.9),
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
col=grey.colors(0.9),
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
col=grey.colors(0.1),
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
col=grey,
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
color.gradient(0.1),
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 25))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
legend("topright", legend = "1 & 2 : non joueur / 3 : joueur occasionnel / 4 : joueur régulier / 5 : pgm")
bpProfilJoueur <- hist(meanProfilAE$meanProfilAE,
main="Sentiment d'auto-efficacité des participants",
xlab="Sentiment d'auto-efficacité (maximum = 5)",
ylab="Répartition suivant les participants se définissant comme joueur",
xlim = c(1, 5),
ylim = c(0, 20))
abline(v=mean(meanProfilAE$meanProfilAE),col = "blue", lwd = 2)
bpProfilJoueur <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Participants",
xlim = c(1, 5),
ylim = c(0, 11))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
bpProfilJoueur <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Participants",
xlim = c(1, 11),
ylim = c(0, 20))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
bpProfilJoueur <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Participants",
xlim = c(1, 11),
ylim = c(0, 40))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
bpProfilJoueur <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Participants",
xlim = c(1, 11),
ylim = c(0, 30))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
bpProfilJoueur <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Participants",
xlim = c(1, 11),
ylim = c(0, 25))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
bpProfilJoueur <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(1, 11),
ylim = c(0, 25))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
bpProfilJoueur <- hist(dataQ$sumProfilRA,
main="Aversion au risque des participants",
xlab="Somme des choix sûrs (maximum = 10)",
ylab="Répartition des participants",
xlim = c(0, 10),
ylim = c(0, 25))
abline(v=mean(dataQ$sumProfilRA),col = "blue", lwd = 2)
legend("top", legend = "0-1 : highly risk loving / 2 : very risk loving / 3 : risk loving / 4 : risk neutral / 5 : slightly risk averse
6 : risk averse / 7 : very risk averse / 8 : highly risk avers / 9-10 : stay in bed")
